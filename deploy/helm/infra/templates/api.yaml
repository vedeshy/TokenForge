apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: {{ .Values.api.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: metrics
        env:
        - name: DATABASE_URL
          value: postgres://postgres:postgres@postgres:5432/tokenforge
        - name: S3_ENDPOINT
          value: http://minio:9000
        - name: AWS_ACCESS_KEY_ID
          value: minioadmin
        - name: AWS_SECRET_ACCESS_KEY
          value: minioadmin
        - name: S3_BUCKET
          value: tokenforge-benchmarks
        resources:
          requests:
            cpu: {{ .Values.api.resources.requests.cpu }}
            memory: {{ .Values.api.resources.requests.memory }}
          limits:
            cpu: {{ .Values.api.resources.limits.cpu }}
            memory: {{ .Values.api.resources.limits.memory }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
spec:
  selector:
    app: api
  ports:
  - port: 8080
    targetPort: http
    name: http
  - port: 8081
    targetPort: metrics
    name: metrics
