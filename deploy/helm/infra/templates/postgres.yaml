apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: tokenforge
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            cpu: {{ .Values.postgres.resources.requests.cpu }}
            memory: {{ .Values.postgres.resources.requests.memory }}
          limits:
            cpu: {{ .Values.postgres.resources.limits.cpu }}
            memory: {{ .Values.postgres.resources.limits.memory }}
      volumes:
      - name: postgres-data
        {{- if .Values.postgres.persistence.enabled }}
        persistentVolumeClaim:
          claimName: postgres-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: init-scripts
        configMap:
          name: postgres-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  0001_init.sql: |
    CREATE TABLE runs (
      id TEXT PRIMARY KEY,
      created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
      status TEXT NOT NULL,
      model TEXT NOT NULL,
      runtimes TEXT[] NOT NULL,
      config_yaml TEXT NOT NULL,
      html_url TEXT,
      csv_url TEXT,
      raw_url TEXT
    );
  0002_status_idx.sql: |
    CREATE INDEX runs_status_created_idx ON runs(status, created_at DESC);
{{- if .Values.postgres.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size }}
{{- end }}
