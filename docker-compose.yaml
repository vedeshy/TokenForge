version: '3.8'

services:
  # API Gateway
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/tokenforge
      - S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET=tokenforge-benchmarks
    depends_on:
      - postgres
      - minio
    networks:
      - tokenforge

  # Worker stub (for development without GPU)
  worker-stub:
    build:
      context: workers/worker-vllm
      dockerfile: Dockerfile.stub
    ports:
      - "8000:8000"
      - "8001:8001"
    environment:
      - MODEL_NAME=stub-model
      - QUANT=fp16
    networks:
      - tokenforge

  # PostgreSQL
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tokenforge
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    networks:
      - tokenforge

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - tokenforge

  # Create buckets
  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/tokenforge-benchmarks;
      /usr/bin/mc policy set public myminio/tokenforge-benchmarks;
      exit 0;
      "
    networks:
      - tokenforge

  # Prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./obs/prometheus.yaml:/etc/prometheus/prometheus.yml
    networks:
      - tokenforge

  # Grafana
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./obs/grafana:/etc/grafana/provisioning/dashboards
      - grafana-data:/var/lib/grafana
    networks:
      - tokenforge

networks:
  tokenforge:
    driver: bridge

volumes:
  postgres-data:
  minio-data:
  grafana-data:
